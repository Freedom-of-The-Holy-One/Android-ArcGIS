import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.MotionEvent;

import com.esri.arcgisruntime.geometry.Point;
import com.esri.arcgisruntime.layers.ArcGISMapImageLayer;
import com.esri.arcgisruntime.mapping.ArcGISMap;
import com.esri.arcgisruntime.mapping.view.Graphic;
import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;
import com.esri.arcgisruntime.mapping.view.MapView;
import com.esri.arcgisruntime.symbology.PictureMarkerSymbol;

public class MainActivity extends AppCompatActivity {

    private MapView mMapView;
    //服务器相关信息
    private Common mCommon=new Common();
    private ArcGISMapImageLayer mapImageLayer;
    private ArcGISMap map;
    private GraphicsOverlay mGraphicsOverlay;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        mMapView= (MapView) findViewById(R.id.map_view);

        mapImageLayer=new ArcGISMapImageLayer(mCommon.main_url);
        map=new ArcGISMap();
        map.getOperationalLayers().add(mapImageLayer);
        map.getOperationalLayers().add(Add_Digital_Layer());
        mMapView.setMap(map);

        mGraphicsOverlay = new GraphicsOverlay();
        mMapView.getGraphicsOverlays().add(mGraphicsOverlay);
        Add_Marker();
    }

    private ArcGISMapImageLayer Add_Digital_Layer(){
        ArcGISMapImageLayer imageLayer=new ArcGISMapImageLayer(mCommon.url_1);
        return imageLayer;
    }

    private void Add_Marker(){
        BitmapDrawable pinStarBlueDrawable = (BitmapDrawable) ContextCompat.getDrawable(this, R.drawable.arcgisruntime_location_display_acquiring_symbol);
        final PictureMarkerSymbol pinStarBlueSymbol = new PictureMarkerSymbol(pinStarBlueDrawable);
        //Optionally set the size, if not set the image will be auto sized based on its size in pixels,
        //its appearance would then differ across devices with different resolutions.
        pinStarBlueSymbol.setHeight(40);
        pinStarBlueSymbol.setWidth(40);
        //Optionally set the offset, to align the base of the symbol aligns with the point geometry
        pinStarBlueSymbol.setOffsetY(
                11); //The image used for the symbol has a transparent buffer around it, so the offset is not simply height/2
        pinStarBlueSymbol.loadAsync();
        //[DocRef: END]
        pinStarBlueSymbol.addDoneLoadingListener(new Runnable() {
            @Override
            public void run() {
                //add a new graphic with the same location as the initial viewpoint
                Point pinStarBluePoint = new Point(119.5,28.36);
                Graphic pinStarBlueGraphic = new Graphic(pinStarBluePoint, pinStarBlueSymbol);
                mGraphicsOverlay.getGraphics().add(pinStarBlueGraphic);
            }
        });
    }

        @Override
    public boolean onTouchEvent(MotionEvent event) {
                int x= (int) event.getX();
                int y= (int) event.getY();
                Log.e("触摸坐标：","x="+x+",y="+y);

                android.graphics.Point mPoint= new android.graphics.Point(x,y);
                Point Lon_Lat_Point= mMapView.screenToLocation(mPoint);
                Log.e("经纬度为：","lon="+Lon_Lat_Point.getX()+",lat="+Lon_Lat_Point.getY());
                return super.onTouchEvent(event);
    }

    @Override
    protected void onPause() {
        super.onPause();
        mMapView.pause();
    }

    @Override
    protected void onResume() {
        super.onResume();
        mMapView.resume();
    }

}


public class Common {
    //服务器地图存放路径
    public final String main_url="xxxxx";
    public final String url_1="xxxxx";
}